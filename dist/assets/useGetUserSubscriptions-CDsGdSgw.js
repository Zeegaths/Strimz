import{r as o,a as v,g as R,b as w,f as F,i,w as b,W as L}from"./index-5lFW-7Db.js";const B=l=>{const[g,m]=o.useState([]),[C,f]=o.useState(0),[k,p]=o.useState(0),[h,S]=o.useState(0),{pathname:P}=v(),t=o.useCallback(async()=>{try{const n=(await R(w).getSubscriptionsOfAddress(l)).map(e=>({status:e[0],planName:e[1],planFee:F(e[2],18),planStreamer:e[3],planId:Number(e[4])}));m(n)}catch(s){console.error(s)}},[l]),u=o.useCallback(()=>{f(s=>s+1),t()},[t]),c=o.useCallback(()=>{p(s=>s+1),t()},[t]),d=o.useCallback(()=>{S(s=>s+1),t()},[t]);return P==="/user/updatesubscription"&&setTimeout(()=>{t(),console.log("fetched data")},8e3),o.useEffect(()=>{t();const s={address:void 0,topics:[i("SubscriptionStarted(address,uint256)")]};b.getLogs({...s,fromBlock:7787519}).then(a=>{f(a.length+1)});const r={address:void 0,topics:[i("SubscriptionPaused(address,uint256)")]};b.getLogs({...r,fromBlock:7787519}).then(a=>{p(a.length+1)});const n={address:void 0,topics:[i("SubscriptionResumed(address,uint256)")]};b.getLogs({...n,fromBlock:7787519}).then(a=>{S(a.length+1)});const e=new L(void 0);return e.on(s,u),e.on(r,c),e.on(n,d),()=>{e.off(s,u),e.off(r,c),e.off(n,d)}},[u,c,d,t,C,k,h]),g};export{B as u};
